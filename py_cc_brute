#Brute force Ceasar Cipher 


def brute(ciphertext):

    result = ''
    # n starts at 0 and we'll go through to 26
    n = 0
    # while loop in order to go through all modulus variations
    while n <= 26:
        for l in ciphertext:
            try:
                if l.isupper():
                    index = ALPHABET.index(l)
                    i = (index + n) % 26
                    result += ALPHABET[i]

                else:
                    index = alphabet.index(l)
                    i = (index + n) % 26
                    result += alphabet[i]

            except ValueError:
                result += l
        # print our results 
        print('Modulus', n, result)
        # move onto next modulus try 
        n += 1
        # reset result to empty 
        result = ''
    return result

brute('Jxov exa x ifqqib ixjy')
